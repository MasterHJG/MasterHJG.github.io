<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title>jekyll使用整理</title>
      <url>/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/2018/10/22/jekyll%E4%BD%BF%E7%94%A8%E6%95%B4%E7%90%86/</url>
      <content type="text">本文只是一个基础的Jekyll搭建GitHub Pages博客的总结，详细内容需要跳转参考链接

参考链接

  jekyll指南
  本站主题NexT使用指南


Jekyll基础内容
安装（Mac OS）
确保已安装Ruby 2.1.0或更高版本

ruby --version



安装Bundler

gem install bundler



下载NexT主题

git clone https://github.com/Simpleyyt/jekyll-theme-next.git
//当前主题所在的文件夹
cd jekyll-theme-next



安装依赖

bundle install



运行Jekyll

bundle exec jekyll server



此时即可使用浏览器访问 http://localhost:4000，检查站点是否正确运行。



目录结构
Jekyll 的核心其实是一个文本转换引擎。它的概念其实就是：你用你最喜欢的标记语言来写文章，可以是 Markdown, 也可以是 Textile, 或者就是简单的 HTML, 然后 Jekyll 就会帮你套入一个或一系列的布局中。在整个过程中你可以设置 URL 路径，你的文本在布局中的显示样式等等。这些都可以通过纯文本编辑来实现，最终生成的静态页面就是你的成品了。

一个基本的 Jekyll 网站的目录结构一般是像这样的：

.
├── _config.yml
├── _drafts
|   ├── begin-with-the-crazy-ideas.textile
|   └── on-simplicity-in-technology.markdown
├── _includes
|   ├── footer.html
|   └── header.html
├── _layouts
|   ├── default.html
|   └── post.html
├── _posts
|   ├── 2007-10-29-why-every-programmer-should-play-nethack.textile
|   └── 2009-04-26-barcamp-boston-4-roundup.textile
├── _site
├── .jekyll-metadata
└── index.html




  
    
      文件/目录
      描述
    
  
  
    
      _config.yml
      保存配置数据。很多配置选项都可以直接在命令行中进行设置，但是如果你把那些配置写在这儿，你就不用非要去记住那些命令了。
    
    
      _drafts
      drafts（草稿）是未发布的文章。这些文件的格式中都没有 title.MARKUP 数据。
    
    
      _includes
      你可以加载这些包含部分到你的布局或者文章中以方便重用。
    
    
      _layouts
      layouts（布局）是包裹在文章外部的模板。布局可以在 YAML 头信息中根据不同文章进行选择。 这将在下一个部分进行介绍。标签   可以将content插入页面中。
    
    
      _posts
      这里放的就是你的文章了。文件格式很重要，必须要符合: YEAR-MONTH-DAY-title.MARKUP。 永久链接 可以在文章中自己定制，但是数据和标记语言都是根据文件名来确定的。
    
    
      _data
      格式化好的网站数据应放在这里。jekyll 的引擎会自动加载在该目录下所有的 yaml 文件（后缀是 .yml, .yaml, .json 或者  .csv ）。这些文件可以经由 ｀site.data｀ 访问。如果有一个 members.yml 文件在该目录下，你就可以通过 site.data.members 获取该文件的内容。
    
    
      _site
      一旦 Jekyll 完成转换，就会将生成的页面放在这里（默认）。最好将这个目录放进你的 .gitignore 文件中。
    
    
      .jekyll-metadata
      该文件帮助 Jekyll 跟踪哪些文件从上次建立站点开始到现在没有被修改，哪些文件需要在下一次站点建立时重新生成。该文件不会被包含在生成的站点中。将它加入到你的 .gitignore 文件可能是一个好注意。
    
    
      index.html and other HTML,Markdown,Textile files
      如果这些文件中包含 YAML 头信息 部分，Jekyll 就会自动将它们进行转换。当然，其他的如 .html, .markdown, .md, 或者 .textile 等在你的站点根目录下或者不是以上提到的目录中的文件也会被转换。
    
    
      Other Files/Folders
      其他一些未被提及的目录和文件如  css 还有 images 文件夹，  favicon.ico 等文件都将被完全拷贝到生成的 site 中。
    
  


博客内容
头信息
正是头信息开始让 Jekyll 变的很酷。任何只要包含 YAML 头信息的文件在 Jekyll 中都能被当做一个特殊的文件来处理。头信息必须在文件的开始部分，并且需要按照 YAML 的格式写在两行三虚线之间。下面是一个基本的例子：

---
title: jekyll使用整理
description: Jekyll 是一个简单的博客形态的静态站点生产机器。它有一个模版目录，其中包含原始文本格式的文档，通过一个转换器（如 Markdown）和我们的 Liquid 渲染器转化成一个完整的可发布的静态网站，你可以发布在任何你喜爱的服务器上。Jekyll 也可以运行在 GitHub Page 上，也就是说，你可以使用 GitHub 的服务来搭建你的项目页面、博客或者网站，而且是完全免费的。
categories:
 - master
tags:
 - jekyll
 - NexT

---



撰写博客
文章文件夹

在目录结构介绍中说明过，所有的文章都在 _posts 文件夹中。这些文件可以用 Markdown 编写，也可以用 Textile 格式编写。只要文件中有 YAML 头信息，它们就会从源格式转化成 HTML 页面，从而成为你的静态网站的一部分。

创建文章的文件

发表一篇新文章，你所需要做的就是在 _posts 文件夹中创建一个新的文件。文件名的命名非常重要。Jekyll 要求一篇文章的文件名遵循下面的格式：

年-月-日-标题.MARKUP



引用图片和其他资源

由于 Jekyll 的灵活性，有很多方式可以解决这个问题。一种常用做法是在工程的根目录下创建一个文件夹，命名为　assets 或者 downloads，将图片文件，下载文件或者其它的资源放到这个文件夹下。然后在任何一篇文章中，它们都可以用站点的根目录来进行引用。这和你站点的域名/二级域名和目录的设置相关，下面有一些例子（Markdown 格式）来演示怎样利用 site.url 变量来解决这个问题。

在文章中引用一个图片

… 从下面的截图可以看到：
![有帮助的截图](http://localhost:4000/assets/screenshot.jpg) 链接一个读者可下载的 PDF 文件：

… 你可以直接 [下载 PDF](http://localhost:4000/assets/mydoc.pdf).



NexT主题（在 Jekyll 中的配置文件是 _config.yml）
主题设定
选择Scheme

Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：


  Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白
  Mist - Muse 的紧凑版本，整洁有序的单栏外观
  Pisces - 双栏 Scheme，小家碧玉似的清新


Scheme 的切换通过更改 _config.yml，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。

#scheme: Muse
#scheme: Mist
scheme: Pisces



设置语言

编辑 主题配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：

language: zh-Hans



设置菜单

菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标

编辑_config.yml，修改以下内容：


  
    设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。

     menu:
   home: /
   archives: /archives
   #about: /about
   #categories: /categories
   tags: /tags
   #commonweal: /404.html

    
  
  
    设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Jekyll 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 _data/languages/{language}.yml （{language} 为你所使用的语言）。

    以简体中文为例，若你需要添加一个菜单项，比如 something。那么就需要修改简体中文对应的翻译文件 _data/languages/zh-Hans.yml，在 menu 字段下添加一项：

     menu:
   home: 首页
   archives: 归档
   categories: 分类
   tags: 标签
   about: 关于
   search: 搜索
   commonweal: 公益404
   something: 有料

    
  
  
    设定菜单项的图标，对应的字段是 menu_icons。 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。

     menu_icons:
   enable: true
   # Icon Mapping.
   home: home
   about: user
   categories: th
   tags: tags
   archives: archive
   commonweal: heartbeat

    
  


</content>
      <categories>
        
          <category> 环境配置 </category>
        
      </categories>
      <tags>
        
          <tag> Jekyll </tag>
        
          <tag> NexT </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
